{"mappings":"AGEO,MAAM,EACX,YAAY,CAAW,CAAE,CAAC,CAAE,CAAC,CAAE,CAC7B,IAAM,EAAO,SAAS,aAAa,CAAC,OAEpC,EAAK,SAAS,CAAC,GAAG,CAAC,cACnB,EAAY,MAAM,CAAC,GACnB,IAAI,CAAC,CAAC,CAAG,EACT,IAAI,CAAC,CAAC,CAAG,CACX,CAEA,SAAS,CAAI,CAAE,CACb,EAAK,KAAK,CAAC,IAAI,CAAC,CAAC,CAAE,IAAI,CAAC,CAAC,EACzB,IAAI,CAAC,UAAU,CAAG,CACpB,CAEA,YAAa,CACX,IAAI,CAAC,UAAU,CAAG,IACpB,CAEA,iBAAiB,CAAI,CAAE,CACrB,EAAK,KAAK,CAAC,IAAI,CAAC,CAAC,CAAE,IAAI,CAAC,CAAC,EACzB,IAAI,CAAC,kBAAkB,CAAG,CAC5B,CAEA,oBAAqB,CACnB,IAAI,CAAC,kBAAkB,CAAG,IAC5B,CAEA,SAAU,CACR,MAAO,CAAC,IAAI,CAAC,UAAU,AACzB,CAEA,UAAU,CAAO,CAAE,CACjB,OACE,IAAI,CAAC,OAAO,IACX,CAAC,IAAI,CAAC,eAAe,IAAM,IAAI,CAAC,UAAU,CAAC,KAAK,GAAK,EAAQ,KAAK,AAEvE,CAEA,iBAAkB,CAChB,MAAO,CAAC,CAAC,IAAI,CAAC,kBAAkB,AAClC,CAEA,YAAa,CACX,IAAM,EAAM,AAAwB,EAAxB,IAAI,CAAC,UAAU,CAAC,KAAK,CAMjC,OAJA,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,GACzB,IAAI,CAAC,kBAAkB,CAAC,eAAe,GACvC,IAAI,CAAC,kBAAkB,GAEhB,CACT,CACF,CDjDO,MAAM,EACX,YAAY,CAAW,CAAE,CACvB,IAAI,CAAC,KAAK,CAAG,EAAE,CAEf,IAAK,IAAI,EAAI,EAAG,EAAI,GAAuB,IACzC,IAAI,CAAC,KAAK,CAAC,IAAI,CACb,IAAI,EAAK,EAAa,EARZ,EAQ2B,KAAK,KAAK,CAAC,EARtC,IAYd,CAAA,IAAI,CAAC,oBAAoB,CAAG,IAAI,CAAC,kBAAkB,GACnD,IAAI,CAAC,iBAAiB,CAAG,IAAI,CAAC,eAAe,GAE7C,IAAI,CAAC,4BAA4B,CAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAC/D,AAAC,GAAW,IAAI,EAAO,CAAC,OAAO,IAGjC,IAAI,CAAC,yBAAyB,CAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,AAAC,GACpD,IAAI,EAAI,CAAC,OAAO,GAE3B,CAEA,oBAAqB,CACnB,IAAM,EAAa,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,AAAC,GAAS,EAAK,OAAO,IACrD,EAAc,KAAK,KAAK,CAAC,KAAK,MAAM,GAAK,EAAW,MAAM,EAEhE,OAAO,CAAU,CAAC,EAAY,AAChC,CAEA,oBAAqB,CACnB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAc,KACtC,CAAY,CAAC,EAAK,CAAC,CAAC,CAAG,CAAY,CAAC,EAAK,CAAC,CAAC,EAAI,EAAE,CACjD,CAAY,CAAC,EAAK,CAAC,CAAC,CAAC,EAAK,CAAC,CAAC,CAAG,EAExB,GACN,EAAE,CACP,CAEA,iBAAkB,CAChB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAc,KACtC,CAAY,CAAC,EAAK,CAAC,CAAC,CAAG,CAAY,CAAC,EAAK,CAAC,CAAC,EAAI,EAAE,CACjD,CAAY,CAAC,EAAK,CAAC,CAAC,CAAC,EAAK,CAAC,CAAC,CAAG,EAExB,GACN,EAAE,CACP,CACF,CEnDO,MAAM,EACX,YAAY,CAAa,CAAE,CACzB,IAAI,CAAC,IAAI,CAAG,SAAS,aAAa,CAAC,OACnC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QACxB,IAAI,CAAC,QAAQ,CAAC,KAAK,MAAM,GAAK,GAAM,EAAI,GACxC,EAAc,MAAM,CAAC,IAAI,CAAC,IAAI,CAChC,CAEA,MAAM,CAAC,CAAE,CAAC,CAAE,CACV,IAAI,CAAC,CAAC,CAAG,EACT,IAAI,CAAC,CAAC,CAAG,EACT,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAO,GACnC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAO,EACrC,CAEA,SAAS,CAAG,CAAE,CACZ,IAAI,CAAC,KAAK,CAAG,EACb,IAAI,CAAC,IAAI,CAAC,WAAW,CAAG,EAExB,IAAM,EAAQ,IAAM,AAAiB,EAAjB,KAAK,IAAI,CAAC,GAE9B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,aAAc,CAAC,EAAE,EAAM,CAAC,CAAC,EACrD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,eAAgB,CAAC,EAAE,GAAS,GAAK,GAAK,GAAG,CAAC,CAAC,CACzE,CAEA,iBAAkB,CAChB,IAAI,CAAC,IAAI,EAAE,QACb,CACF,CHxBA,MAAM,EAAY,SAAS,cAAc,CAAC,cACpC,EAAS,SAAS,aAAa,CAAC,WAChC,EAAa,SAAS,aAAa,CAAC,eACpC,EAAY,SAAS,aAAa,CAAC,cAEnC,EAAe,SAAS,aAAa,CAAC,kBACtC,EAAa,SAAS,aAAa,CAAC,gBACpC,EAAc,SAAS,aAAa,CAAC,iBACrC,EAAa,SAAS,aAAa,CAAC,gBAE1C,IAAI,EAAO,IAAI,EAAK,GAEhB,EAAQ,EACR,EA6BK,CAAC,aAAa,OAAO,CAAC,cAAgB,EAG/C,SAAS,IACP,OAAO,gBAAgB,CAAC,UAAW,EAAc,CAAE,KAAM,CAAA,CAAK,EAChE,CAEA,SAAS,EAAa,CAAC,EACrB,OAAQ,EAAE,GAAG,EACX,IAAK,UACH,GAAI,CAAC,IAAa,CAChB,IAEA,MACF,CAiEJ,EAAW,EAAK,oBAAoB,EA7DhC,KAEF,KAAK,YACH,GAAI,CAAC,IAAe,CAClB,IAEA,MACF,CA0DJ,EAAW,EAAK,4BAA4B,EAtDxC,KAEF,KAAK,YACH,GAAI,CAAC,IAAe,CAClB,IAEA,MACF,CAmDJ,EAAW,EAAK,iBAAiB,EA/C7B,KAEF,KAAK,aACH,GAAI,CAAC,IAAgB,CACnB,IAEA,MACF,CA4CJ,EAAW,EAAK,yBAAyB,EAxCrC,KAEF,SACE,IAEA,MACJ,CAEA,IAAM,EAAU,IAAI,EAAK,GAIzB,GAFA,EAAK,kBAAkB,GAAG,QAAQ,CAAC,GAE/B,CAAC,KAAe,CAAC,KAAiB,CAAC,KAAiB,CAAC,IAAgB,CACvE,GAAI,CAAC,EAAW,SAAS,CAAC,QAAQ,CAAC,UAAW,CAC5C,EAAW,SAAS,CAAC,MAAM,CAAC,UAE5B,MACF,CAEA,EAAY,SAAS,CAAC,MAAM,CAAC,UAE7B,MACF,CAEA,GACF,CAkBA,SAAS,EAAW,CAAY,EAC9B,EAAa,OAAO,CAAC,AAAC,GAAU,AAsBlC,CAAA,SAA2B,CAAK,EAC9B,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,MAAM,CAAE,GAAK,EAAG,KAOpC,EANJ,GAAI,CAAK,CAAC,EAAE,CAAC,OAAO,GAClB,SAGF,IAAM,EAAe,CAAK,CAAC,EAAE,CAGzB,EAAI,EAAI,EAEZ,KAAO,GAAK,GAAK,CAAK,CAAC,EAAE,CAAC,SAAS,CAAC,EAAa,UAAU,GACzD,EAAa,CAAK,CAAC,EAAE,CACrB,IAGG,IAID,EAAW,OAAO,GACpB,EAAW,QAAQ,CAAC,EAAa,UAAU,EAE3C,EAAW,gBAAgB,CAAC,EAAa,UAAU,EAGrD,EAAa,UAAU,GACzB,CACF,CAAA,EAlDoD,IAElD,EAAK,KAAK,CAAC,OAAO,CAAC,AAAC,IAClB,GAAI,EAAK,eAAe,GAAI,CAC1B,IAAM,EAAe,EAAK,UAAU,EAEf,CAAA,OAAjB,GACF,EAAW,SAAS,CAAC,MAAM,CAAC,UAG9B,GAAS,EACT,EAAW,WAAW,CAAG,EAErB,EAAQ,IACV,EAAY,EACZ,aAAa,OAAO,CAAC,YAAa,GAClC,EAAU,WAAW,CAAG,EAE5B,CACF,EACF,CAgCA,SAAS,IACP,OAAO,EAAQ,EAAK,oBAAoB,CAC1C,CAEA,SAAS,IACP,OAAO,EAAQ,EAAK,4BAA4B,CAClD,CAEA,SAAS,IACP,OAAO,EAAQ,EAAK,iBAAiB,CACvC,CAEA,SAAS,IACP,OAAO,EAAQ,EAAK,yBAAyB,CAC/C,CAEA,SAAS,EAAQ,CAAY,EAC3B,OAAO,EAAa,IAAI,CAAC,AAAC,GAInB,AAJ4C,EAItC,IAAI,CAAC,CAAC,EAAM,IACvB,EAAc,IAAV,GAIA,EAAK,OAAO,KAMT,AAFY,AAb8B,CAazB,CAAC,EAAQ,EAAE,CAEjB,SAAS,CAAC,EAAK,UAAU,GAd/C,CAhMA,EAAU,WAAW,CAAG,EACxB,EAAO,gBAAgB,CAAC,QAExB,WACE,KAAO,EAAU,UAAU,EACzB,EAAU,WAAW,CAAC,EAAU,UAAU,EAI5C,AADA,CAAA,EAAO,IAAI,EAAK,EAAhB,EACK,kBAAkB,GAAG,QAAQ,CAAC,IAAI,EAAK,IAC5C,EAAK,kBAAkB,GAAG,QAAQ,CAAC,IAAI,EAAK,IAE5C,EAAQ,EACR,EAAW,WAAW,CAAG,EACzB,EAAO,SAAS,CAAC,OAAO,CAAC,QAAS,WAClC,EAAO,WAAW,CAAG,UAErB,EAAa,SAAS,CAAC,GAAG,CAAC,UAC3B,EAAY,SAAS,CAAC,GAAG,CAAC,UAC1B,EAAW,SAAS,CAAC,GAAG,CAAC,UACzB,EAAW,SAAS,CAAC,GAAG,CAAC,UACzB,EAAO,IAAI,GAEX,GACF","sources":["<anon>","src/scripts/main.js","src/scripts/Grid.js","src/scripts/Cell.js","src/scripts/Tile.js"],"sourcesContent":["\"use strict\";\nclass $4eff5ff9582f746d$export$f6f0c3fe4ec306ea {\n    constructor(gridElement, x, y){\n        const cell = document.createElement(\"div\");\n        cell.classList.add(\"field-cell\");\n        gridElement.append(cell);\n        this.x = x;\n        this.y = y;\n    }\n    linkTile(tile) {\n        tile.setXY(this.x, this.y);\n        this.linkedTile = tile;\n    }\n    unlinkTile() {\n        this.linkedTile = null;\n    }\n    linkTileForMerge(tile) {\n        tile.setXY(this.x, this.y);\n        this.linkedTileForMerge = tile;\n    }\n    unlinkTileForMerge() {\n        this.linkedTileForMerge = null;\n    }\n    isEmpty() {\n        return !this.linkedTile;\n    }\n    canAccept(newTile) {\n        return this.isEmpty() || !this.hasTileForMerge() && this.linkedTile.value === newTile.value;\n    }\n    hasTileForMerge() {\n        return !!this.linkedTileForMerge;\n    }\n    mergeTiles() {\n        const res = this.linkedTile.value * 2;\n        this.linkedTile.setValue(res);\n        this.linkedTileForMerge.removeFromField();\n        this.unlinkTileForMerge();\n        return res;\n    }\n}\n\n\n\"use strict\";\nconst $2e8a32b1f3d315a7$var$GRID_SIZE = 4;\nclass $2e8a32b1f3d315a7$export$ef2184bd89960b14 {\n    constructor(gtidElement){\n        this.cells = [];\n        for(let i = 0; i < $2e8a32b1f3d315a7$var$GRID_SIZE * $2e8a32b1f3d315a7$var$GRID_SIZE; i++)this.cells.push(new (0, $4eff5ff9582f746d$export$f6f0c3fe4ec306ea)(gtidElement, i % $2e8a32b1f3d315a7$var$GRID_SIZE, Math.floor(i / $2e8a32b1f3d315a7$var$GRID_SIZE)));\n        this.cellsGroupedByColumn = this.groupCellsByColumn();\n        this.cellsGroupedByRow = this.groupCellsByRow();\n        this.cellsGroupedByReversedColumn = this.cellsGroupedByColumn.map((column)=>[\n                ...column\n            ].reverse());\n        this.cellsGroupedByReversedRow = this.cellsGroupedByRow.map((row)=>{\n            return [\n                ...row\n            ].reverse();\n        });\n    }\n    getRandomEmptyCell() {\n        const emptyCells = this.cells.filter((cell)=>cell.isEmpty());\n        const randomIndex = Math.floor(Math.random() * emptyCells.length);\n        return emptyCells[randomIndex];\n    }\n    groupCellsByColumn() {\n        return this.cells.reduce((gruopedCells, cell)=>{\n            gruopedCells[cell.x] = gruopedCells[cell.x] || [];\n            gruopedCells[cell.x][cell.y] = cell;\n            return gruopedCells;\n        }, []);\n    }\n    groupCellsByRow() {\n        return this.cells.reduce((gruopedCells, cell)=>{\n            gruopedCells[cell.y] = gruopedCells[cell.y] || [];\n            gruopedCells[cell.y][cell.x] = cell;\n            return gruopedCells;\n        }, []);\n    }\n}\n\n\nclass $21198e7cd5cea76d$export$235cb65c20ad2b7 {\n    constructor(tileContainer){\n        this.tile = document.createElement(\"div\");\n        this.tile.classList.add(\"tile\");\n        this.setValue(Math.random() > 0.2 ? 2 : 4);\n        tileContainer.append(this.tile);\n    }\n    setXY(x, y) {\n        this.x = x;\n        this.y = y;\n        this.tile.style.setProperty(\"--x\", x);\n        this.tile.style.setProperty(\"--y\", y);\n    }\n    setValue(val) {\n        this.value = val;\n        this.tile.textContent = val;\n        const color = 100 - Math.log2(val) * 9;\n        this.tile.style.setProperty(\"--bg-color\", `${color}%`);\n        this.tile.style.setProperty(\"--text-color\", `${color <= 50 ? 90 : 10}%`);\n    }\n    removeFromField() {\n        this.tile?.remove();\n    }\n}\n\n\n\"use strict\";\nconst $09e991522ca7e64e$var$gameField = document.getElementById(\"game-field\");\nconst $09e991522ca7e64e$var$button = document.querySelector(\".button\");\nconst $09e991522ca7e64e$var$scoreField = document.querySelector(\".game-score\");\nconst $09e991522ca7e64e$var$bestField = document.querySelector(\".game-best\");\nconst $09e991522ca7e64e$var$startMessage = document.querySelector(\".message-start\");\nconst $09e991522ca7e64e$var$winMessage = document.querySelector(\".message-win\");\nconst $09e991522ca7e64e$var$loseMessage = document.querySelector(\".message-lose\");\nconst $09e991522ca7e64e$var$endMessage = document.querySelector(\".message-end\");\nlet $09e991522ca7e64e$var$grid = new (0, $2e8a32b1f3d315a7$export$ef2184bd89960b14)($09e991522ca7e64e$var$gameField);\nlet $09e991522ca7e64e$var$score = 0;\nlet $09e991522ca7e64e$var$bestScore = $09e991522ca7e64e$var$getBestScore();\n$09e991522ca7e64e$var$bestField.textContent = $09e991522ca7e64e$var$bestScore;\n$09e991522ca7e64e$var$button.addEventListener(\"click\", $09e991522ca7e64e$var$loadGame);\nfunction $09e991522ca7e64e$var$loadGame() {\n    while($09e991522ca7e64e$var$gameField.firstChild)$09e991522ca7e64e$var$gameField.removeChild($09e991522ca7e64e$var$gameField.firstChild);\n    $09e991522ca7e64e$var$grid = new (0, $2e8a32b1f3d315a7$export$ef2184bd89960b14)($09e991522ca7e64e$var$gameField);\n    $09e991522ca7e64e$var$grid.getRandomEmptyCell().linkTile(new (0, $21198e7cd5cea76d$export$235cb65c20ad2b7)($09e991522ca7e64e$var$gameField));\n    $09e991522ca7e64e$var$grid.getRandomEmptyCell().linkTile(new (0, $21198e7cd5cea76d$export$235cb65c20ad2b7)($09e991522ca7e64e$var$gameField));\n    $09e991522ca7e64e$var$score = 0;\n    $09e991522ca7e64e$var$scoreField.textContent = $09e991522ca7e64e$var$score;\n    $09e991522ca7e64e$var$button.classList.replace(\"start\", \"restart\");\n    $09e991522ca7e64e$var$button.textContent = \"Restart\";\n    $09e991522ca7e64e$var$startMessage.classList.add(\"hidden\");\n    $09e991522ca7e64e$var$loseMessage.classList.add(\"hidden\");\n    $09e991522ca7e64e$var$winMessage.classList.add(\"hidden\");\n    $09e991522ca7e64e$var$endMessage.classList.add(\"hidden\");\n    $09e991522ca7e64e$var$button.blur();\n    $09e991522ca7e64e$var$setupInputOnce();\n}\nfunction $09e991522ca7e64e$var$getBestScore() {\n    return +localStorage.getItem(\"bestScore\") || 0;\n}\nfunction $09e991522ca7e64e$var$setupInputOnce() {\n    window.addEventListener(\"keydown\", $09e991522ca7e64e$var$inputHandler, {\n        once: true\n    });\n}\nfunction $09e991522ca7e64e$var$inputHandler(e) {\n    switch(e.key){\n        case \"ArrowUp\":\n            if (!$09e991522ca7e64e$var$canMoveUp()) {\n                $09e991522ca7e64e$var$setupInputOnce();\n                return;\n            }\n            $09e991522ca7e64e$var$moveUp();\n            break;\n        case \"ArrowDown\":\n            if (!$09e991522ca7e64e$var$canMoveDown()) {\n                $09e991522ca7e64e$var$setupInputOnce();\n                return;\n            }\n            $09e991522ca7e64e$var$moveDown();\n            break;\n        case \"ArrowLeft\":\n            if (!$09e991522ca7e64e$var$canMoveLeft()) {\n                $09e991522ca7e64e$var$setupInputOnce();\n                return;\n            }\n            $09e991522ca7e64e$var$moveLeft();\n            break;\n        case \"ArrowRight\":\n            if (!$09e991522ca7e64e$var$canMoveRight()) {\n                $09e991522ca7e64e$var$setupInputOnce();\n                return;\n            }\n            $09e991522ca7e64e$var$moveRight();\n            break;\n        default:\n            $09e991522ca7e64e$var$setupInputOnce();\n            return;\n    }\n    const newTile = new (0, $21198e7cd5cea76d$export$235cb65c20ad2b7)($09e991522ca7e64e$var$gameField);\n    $09e991522ca7e64e$var$grid.getRandomEmptyCell().linkTile(newTile);\n    if (!$09e991522ca7e64e$var$canMoveUp() && !$09e991522ca7e64e$var$canMoveDown() && !$09e991522ca7e64e$var$canMoveLeft() && !$09e991522ca7e64e$var$canMoveRight()) {\n        if (!$09e991522ca7e64e$var$winMessage.classList.contains(\"hidden\")) {\n            $09e991522ca7e64e$var$endMessage.classList.remove(\"hidden\");\n            return;\n        }\n        $09e991522ca7e64e$var$loseMessage.classList.remove(\"hidden\");\n        return;\n    }\n    $09e991522ca7e64e$var$setupInputOnce();\n}\nfunction $09e991522ca7e64e$var$moveUp() {\n    $09e991522ca7e64e$var$slideTiles($09e991522ca7e64e$var$grid.cellsGroupedByColumn);\n}\nfunction $09e991522ca7e64e$var$moveDown() {\n    $09e991522ca7e64e$var$slideTiles($09e991522ca7e64e$var$grid.cellsGroupedByReversedColumn);\n}\nfunction $09e991522ca7e64e$var$moveLeft() {\n    $09e991522ca7e64e$var$slideTiles($09e991522ca7e64e$var$grid.cellsGroupedByRow);\n}\nfunction $09e991522ca7e64e$var$moveRight() {\n    $09e991522ca7e64e$var$slideTiles($09e991522ca7e64e$var$grid.cellsGroupedByReversedRow);\n}\nfunction $09e991522ca7e64e$var$slideTiles(gruopedCells) {\n    gruopedCells.forEach((group)=>$09e991522ca7e64e$var$slideTilesInGroup(group));\n    $09e991522ca7e64e$var$grid.cells.forEach((cell)=>{\n        if (cell.hasTileForMerge()) {\n            const currentScore = cell.mergeTiles();\n            if (currentScore === 2048) $09e991522ca7e64e$var$winMessage.classList.remove(\"hidden\");\n            $09e991522ca7e64e$var$score += currentScore;\n            $09e991522ca7e64e$var$scoreField.textContent = $09e991522ca7e64e$var$score;\n            if ($09e991522ca7e64e$var$score > $09e991522ca7e64e$var$bestScore) {\n                $09e991522ca7e64e$var$bestScore = $09e991522ca7e64e$var$score;\n                localStorage.setItem(\"bestScore\", $09e991522ca7e64e$var$bestScore);\n                $09e991522ca7e64e$var$bestField.textContent = $09e991522ca7e64e$var$bestScore;\n            }\n        }\n    });\n}\nfunction $09e991522ca7e64e$var$slideTilesInGroup(group) {\n    for(let i = 1; i < group.length; i += 1){\n        if (group[i].isEmpty()) continue;\n        const cellWithTile = group[i];\n        let targetCell;\n        let j = i - 1;\n        while(j >= 0 && group[j].canAccept(cellWithTile.linkedTile)){\n            targetCell = group[j];\n            j--;\n        }\n        if (!targetCell) continue;\n        if (targetCell.isEmpty()) targetCell.linkTile(cellWithTile.linkedTile);\n        else targetCell.linkTileForMerge(cellWithTile.linkedTile);\n        cellWithTile.unlinkTile();\n    }\n}\nfunction $09e991522ca7e64e$var$canMoveUp() {\n    return $09e991522ca7e64e$var$canMove($09e991522ca7e64e$var$grid.cellsGroupedByColumn);\n}\nfunction $09e991522ca7e64e$var$canMoveDown() {\n    return $09e991522ca7e64e$var$canMove($09e991522ca7e64e$var$grid.cellsGroupedByReversedColumn);\n}\nfunction $09e991522ca7e64e$var$canMoveLeft() {\n    return $09e991522ca7e64e$var$canMove($09e991522ca7e64e$var$grid.cellsGroupedByRow);\n}\nfunction $09e991522ca7e64e$var$canMoveRight() {\n    return $09e991522ca7e64e$var$canMove($09e991522ca7e64e$var$grid.cellsGroupedByReversedRow);\n}\nfunction $09e991522ca7e64e$var$canMove(gruopedCells) {\n    return gruopedCells.some((group)=>$09e991522ca7e64e$var$canMoveInGroup(group));\n}\nfunction $09e991522ca7e64e$var$canMoveInGroup(group) {\n    return group.some((cell, index)=>{\n        if (index === 0) return false;\n        if (cell.isEmpty()) return false;\n        const targetCell = group[index - 1];\n        return targetCell.canAccept(cell.linkedTile);\n    });\n}\n\n\n//# sourceMappingURL=index.c3234430.js.map\n","'use strict';\nimport { Grid } from './Grid.js';\nimport { Tile } from './Tile.js';\n\nconst gameField = document.getElementById('game-field');\nconst button = document.querySelector('.button');\nconst scoreField = document.querySelector('.game-score');\nconst bestField = document.querySelector('.game-best');\n\nconst startMessage = document.querySelector('.message-start');\nconst winMessage = document.querySelector('.message-win');\nconst loseMessage = document.querySelector('.message-lose');\nconst endMessage = document.querySelector('.message-end');\n\nlet grid = new Grid(gameField);\n\nlet score = 0;\nlet bestScore = getBestScore();\n\nbestField.textContent = bestScore;\nbutton.addEventListener('click', loadGame);\n\nfunction loadGame() {\n  while (gameField.firstChild) {\n    gameField.removeChild(gameField.firstChild);\n  }\n\n  grid = new Grid(gameField);\n  grid.getRandomEmptyCell().linkTile(new Tile(gameField));\n  grid.getRandomEmptyCell().linkTile(new Tile(gameField));\n\n  score = 0;\n  scoreField.textContent = score;\n  button.classList.replace('start', 'restart');\n  button.textContent = 'Restart';\n\n  startMessage.classList.add('hidden');\n  loseMessage.classList.add('hidden');\n  winMessage.classList.add('hidden');\n  endMessage.classList.add('hidden');\n  button.blur();\n\n  setupInputOnce();\n}\n\nfunction getBestScore() {\n  return +localStorage.getItem('bestScore') || 0;\n}\n\nfunction setupInputOnce() {\n  window.addEventListener('keydown', inputHandler, { once: true });\n}\n\nfunction inputHandler(e) {\n  switch (e.key) {\n    case 'ArrowUp':\n      if (!canMoveUp()) {\n        setupInputOnce();\n\n        return;\n      }\n\n      moveUp();\n\n      break;\n\n    case 'ArrowDown':\n      if (!canMoveDown()) {\n        setupInputOnce();\n\n        return;\n      }\n\n      moveDown();\n\n      break;\n\n    case 'ArrowLeft':\n      if (!canMoveLeft()) {\n        setupInputOnce();\n\n        return;\n      }\n\n      moveLeft();\n\n      break;\n\n    case 'ArrowRight':\n      if (!canMoveRight()) {\n        setupInputOnce();\n\n        return;\n      }\n\n      moveRight();\n\n      break;\n\n    default:\n      setupInputOnce();\n\n      return;\n  }\n\n  const newTile = new Tile(gameField);\n\n  grid.getRandomEmptyCell().linkTile(newTile);\n\n  if (!canMoveUp() && !canMoveDown() && !canMoveLeft() && !canMoveRight()) {\n    if (!winMessage.classList.contains('hidden')) {\n      endMessage.classList.remove('hidden');\n\n      return;\n    }\n\n    loseMessage.classList.remove('hidden');\n\n    return;\n  }\n\n  setupInputOnce();\n}\n\nfunction moveUp() {\n  slideTiles(grid.cellsGroupedByColumn);\n}\n\nfunction moveDown() {\n  slideTiles(grid.cellsGroupedByReversedColumn);\n}\n\nfunction moveLeft() {\n  slideTiles(grid.cellsGroupedByRow);\n}\n\nfunction moveRight() {\n  slideTiles(grid.cellsGroupedByReversedRow);\n}\n\nfunction slideTiles(gruopedCells) {\n  gruopedCells.forEach((group) => slideTilesInGroup(group));\n\n  grid.cells.forEach((cell) => {\n    if (cell.hasTileForMerge()) {\n      const currentScore = cell.mergeTiles();\n\n      if (currentScore === 2048) {\n        winMessage.classList.remove('hidden');\n      }\n\n      score += currentScore;\n      scoreField.textContent = score;\n\n      if (score > bestScore) {\n        bestScore = score;\n        localStorage.setItem('bestScore', bestScore);\n        bestField.textContent = bestScore;\n      }\n    }\n  });\n}\n\nfunction slideTilesInGroup(group) {\n  for (let i = 1; i < group.length; i += 1) {\n    if (group[i].isEmpty()) {\n      continue;\n    }\n\n    const cellWithTile = group[i];\n\n    let targetCell;\n    let j = i - 1;\n\n    while (j >= 0 && group[j].canAccept(cellWithTile.linkedTile)) {\n      targetCell = group[j];\n      j--;\n    }\n\n    if (!targetCell) {\n      continue;\n    }\n\n    if (targetCell.isEmpty()) {\n      targetCell.linkTile(cellWithTile.linkedTile);\n    } else {\n      targetCell.linkTileForMerge(cellWithTile.linkedTile);\n    }\n\n    cellWithTile.unlinkTile();\n  }\n}\n\nfunction canMoveUp() {\n  return canMove(grid.cellsGroupedByColumn);\n}\n\nfunction canMoveDown() {\n  return canMove(grid.cellsGroupedByReversedColumn);\n}\n\nfunction canMoveLeft() {\n  return canMove(grid.cellsGroupedByRow);\n}\n\nfunction canMoveRight() {\n  return canMove(grid.cellsGroupedByReversedRow);\n}\n\nfunction canMove(gruopedCells) {\n  return gruopedCells.some((group) => canMoveInGroup(group));\n}\n\nfunction canMoveInGroup(group) {\n  return group.some((cell, index) => {\n    if (index === 0) {\n      return false;\n    }\n\n    if (cell.isEmpty()) {\n      return false;\n    }\n\n    const targetCell = group[index - 1];\n\n    return targetCell.canAccept(cell.linkedTile);\n  });\n}\n","'use strict';\nimport { Cell } from './Cell.js';\n\nconst GRID_SIZE = 4;\n\nexport class Grid {\n  constructor(gtidElement) {\n    this.cells = [];\n\n    for (let i = 0; i < GRID_SIZE * GRID_SIZE; i++) {\n      this.cells.push(\n        new Cell(gtidElement, i % GRID_SIZE, Math.floor(i / GRID_SIZE)),\n      );\n    }\n\n    this.cellsGroupedByColumn = this.groupCellsByColumn();\n    this.cellsGroupedByRow = this.groupCellsByRow();\n\n    this.cellsGroupedByReversedColumn = this.cellsGroupedByColumn.map(\n      (column) => [...column].reverse(),\n    );\n\n    this.cellsGroupedByReversedRow = this.cellsGroupedByRow.map((row) => {\n      return [...row].reverse();\n    });\n  }\n\n  getRandomEmptyCell() {\n    const emptyCells = this.cells.filter((cell) => cell.isEmpty());\n    const randomIndex = Math.floor(Math.random() * emptyCells.length);\n\n    return emptyCells[randomIndex];\n  }\n\n  groupCellsByColumn() {\n    return this.cells.reduce((gruopedCells, cell) => {\n      gruopedCells[cell.x] = gruopedCells[cell.x] || [];\n      gruopedCells[cell.x][cell.y] = cell;\n\n      return gruopedCells;\n    }, []);\n  }\n\n  groupCellsByRow() {\n    return this.cells.reduce((gruopedCells, cell) => {\n      gruopedCells[cell.y] = gruopedCells[cell.y] || [];\n      gruopedCells[cell.y][cell.x] = cell;\n\n      return gruopedCells;\n    }, []);\n  }\n}\n","'use strict';\n\nexport class Cell {\n  constructor(gridElement, x, y) {\n    const cell = document.createElement('div');\n\n    cell.classList.add('field-cell');\n    gridElement.append(cell);\n    this.x = x;\n    this.y = y;\n  }\n\n  linkTile(tile) {\n    tile.setXY(this.x, this.y);\n    this.linkedTile = tile;\n  }\n\n  unlinkTile() {\n    this.linkedTile = null;\n  }\n\n  linkTileForMerge(tile) {\n    tile.setXY(this.x, this.y);\n    this.linkedTileForMerge = tile;\n  }\n\n  unlinkTileForMerge() {\n    this.linkedTileForMerge = null;\n  }\n\n  isEmpty() {\n    return !this.linkedTile;\n  }\n\n  canAccept(newTile) {\n    return (\n      this.isEmpty() ||\n      (!this.hasTileForMerge() && this.linkedTile.value === newTile.value)\n    );\n  }\n\n  hasTileForMerge() {\n    return !!this.linkedTileForMerge;\n  }\n\n  mergeTiles() {\n    const res = this.linkedTile.value * 2;\n\n    this.linkedTile.setValue(res);\n    this.linkedTileForMerge.removeFromField();\n    this.unlinkTileForMerge();\n\n    return res;\n  }\n}\n","export class Tile {\n  constructor(tileContainer) {\n    this.tile = document.createElement('div');\n    this.tile.classList.add('tile');\n    this.setValue(Math.random() > 0.2 ? 2 : 4);\n    tileContainer.append(this.tile);\n  }\n\n  setXY(x, y) {\n    this.x = x;\n    this.y = y;\n    this.tile.style.setProperty('--x', x);\n    this.tile.style.setProperty('--y', y);\n  }\n\n  setValue(val) {\n    this.value = val;\n    this.tile.textContent = val;\n\n    const color = 100 - Math.log2(val) * 9;\n\n    this.tile.style.setProperty('--bg-color', `${color}%`);\n    this.tile.style.setProperty('--text-color', `${color <= 50 ? 90 : 10}%`);\n  }\n\n  removeFromField() {\n    this.tile?.remove();\n  }\n}\n"],"names":["$4eff5ff9582f746d$export$f6f0c3fe4ec306ea","constructor","gridElement","x","y","cell","document","createElement","classList","add","append","linkTile","tile","setXY","linkedTile","unlinkTile","linkTileForMerge","linkedTileForMerge","unlinkTileForMerge","isEmpty","canAccept","newTile","hasTileForMerge","value","mergeTiles","res","setValue","removeFromField","$2e8a32b1f3d315a7$export$ef2184bd89960b14","gtidElement","cells","i","$2e8a32b1f3d315a7$var$GRID_SIZE","push","Math","floor","cellsGroupedByColumn","groupCellsByColumn","cellsGroupedByRow","groupCellsByRow","cellsGroupedByReversedColumn","map","column","reverse","cellsGroupedByReversedRow","row","getRandomEmptyCell","emptyCells","filter","randomIndex","random","length","reduce","gruopedCells","$21198e7cd5cea76d$export$235cb65c20ad2b7","tileContainer","style","setProperty","val","textContent","color","log2","remove","$09e991522ca7e64e$var$gameField","getElementById","$09e991522ca7e64e$var$button","querySelector","$09e991522ca7e64e$var$scoreField","$09e991522ca7e64e$var$bestField","$09e991522ca7e64e$var$startMessage","$09e991522ca7e64e$var$winMessage","$09e991522ca7e64e$var$loseMessage","$09e991522ca7e64e$var$endMessage","$09e991522ca7e64e$var$grid","$09e991522ca7e64e$var$score","$09e991522ca7e64e$var$bestScore","localStorage","getItem","$09e991522ca7e64e$var$setupInputOnce","window","addEventListener","$09e991522ca7e64e$var$inputHandler","once","e","key","$09e991522ca7e64e$var$canMoveUp","$09e991522ca7e64e$var$slideTiles","$09e991522ca7e64e$var$canMoveDown","$09e991522ca7e64e$var$canMoveLeft","$09e991522ca7e64e$var$canMoveRight","contains","forEach","group","$09e991522ca7e64e$var$slideTilesInGroup","targetCell","cellWithTile","j","currentScore","setItem","$09e991522ca7e64e$var$canMove","some","index","firstChild","removeChild","replace","blur"],"version":3,"file":"index.c3234430.js.map"}